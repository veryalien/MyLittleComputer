DESIGN NOTES

MULTIPLY AND DIVIDE NOW IMPLEMENTED

X instructions used

Would be nice if we could extend the Instruction.py so that MUL and DIV could
be used instead of X 01 and X 02



--------------------------------------------------------------------------------

USER EXTENDED INSTRUCTIONS X00-X99

X00 USB   - use B register instead of A in next instruction only
X01 MUL   - multiply    A=A*B
X02 DIV   - divide      A=A/B
X03 REM   - remainder   A=A%B
X04 SHL   - shift left  A >>= 1
X05 SHR   - shift right A <<= 1
X06 ASL   - arithmetic shift left (multiply by two, sign preserved)
X07 ASR   - arithmetic shift right (divide by two, sign preserved)
X08..X99  - reserved for other extended instructions


--------------------------------------------------------------------------------

TRAP CODES

T00       = HLT
T01-T99   = user traps for os calls)


--------------------------------------------------------------------------------

HARDWARE ACCESS (IO)

H01          901          INP
H02          902          OUT
H00,H03..H99 900,903..999 reserved for other hardware access such as GPIO


--------------------------------------------------------------------------------

LIBRARY ROUTINES

It would be nice for the multiply and divide to also be possible as a library
routine that you just call and return.

This means the following
- need a convention that allows call and return to be implemented,
i.e. either a single level stack in memory, or a multi level stack.

- need a librarian, to allow this code to be compiled into a named library
with a named routine name

- need a linker, to allow library functions to be linked in and their
addresses resolved.


END.
